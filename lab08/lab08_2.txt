Andrew Thomas
CS 344 - Lab08
03/29/19

They recommend FTRL for L1 optimization, but the code specifies the same rate (learning_rate) for all runs. How is FTRL managing the learning rate?
As you approach the minimum error, you typically want to reduce your learning rate. FTRL does this in regards to the learning rate power you feed it.

What good does the bucketing/binning do?
It devides data in buckets to make better predictions based on which bucket the new example falls into.

Submit your solutions to tasks 1â€“2. Did you find their task 1 bucketing to make sense? Identify one unique feature cross for task 2 and explain how it could be useful.

Task 1:
  bucketized_latitude = tf.feature_column.bucketized_column(
    latitude, boundaries=get_quantile_based_boundaries(
      training_examples["latitude"], 10))
  bucketized_housing_median_age = tf.feature_column.bucketized_column(
    housing_median_age, boundaries=get_quantile_based_boundaries(
      training_examples["housing_median_age"], 5))
  bucketized_median_income =tf.feature_column.bucketized_column(
    median_income, boundaries=get_quantile_based_boundaries(
      training_examples["median_income"], 6))
  bucketized_rooms_per_person =tf.feature_column.bucketized_column(
    rooms_per_person, boundaries=get_quantile_based_boundaries(
      training_examples["rooms_per_person"], 3))

 Task 2:
 long_x_lat = tf.feature_column.crossed_column(
    set([bucketized_longitude, bucketized_latitude]), hash_bucket_size=2000)

  Another potentially helpful cross feature would be median age X median income. This would give information about the demographics of an area, which could
  be useful in determining housing price.